#!/usr/bin/env node
!function(e){function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}var t={};return r.m=e,r.c=t,r.i=function(e){return e},r.d=function(e,r,t){Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:t})},r.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},r.p="",r(r.s=3)}([function(e,r){e.exports=require("chalk")},function(e,r,t){"use strict";var n=t(4),o=t(2),a=t(0),i=function(){function e(){}return e.prototype.getGraph=function(e){var r=new n.Parser;return new Promise(function(t,n){o.readFile(e,function(e,o){e&&(console.info(a.red("An error occured. This probably means you entered a path that doesn't point to a valid .graphml file.\nPlease correct this and try again")),n(!1),process.exit(1)),r.parseString(o.toString(),function(e,r){e&&(console.info(a.red("An error occured. This means we couldn't parse the .graphml file you provided.\nPlease make sure of its integrity and try again.")),n(!1),process.exit()),t(r)})})})},e.prototype.parse=function(e){var r=this;return new Promise(function(t,n){r.getGraph(e).then(function(e){var r=Object.assign({},{nodes:e.graphml.graph[0].node,edges:e.graphml.graph[0].edge}),n=r.nodes,o=r.edges,a=n.map(function(e){return Object.assign({},{label:e.data[0]["y:GenericNode"][0]["y:NodeLabel"][0]._,properties:e.data[0]["y:GenericNode"][0]["y:NodeLabel"][1]._,id:e.$.id})}),i=o.map(function(e){var r;if("y:PolyLineEdge"in e.data[0]&&"y:EdgeLabel"in e.data[0]["y:PolyLineEdge"][0]){var t=e.data[0]["y:PolyLineEdge"][0]["y:EdgeLabel"][0]._.match(new RegExp(/[(A-Z)]+/,"g")).join("_"),n=e.data[0]["y:PolyLineEdge"][0]["y:EdgeLabel"][0]._.replace(t,"");r=Object.assign({},{id:e.$.id,source:e.$.source,target:e.$.target,label:t,properties:n})}else r=Object.assign({},{id:e.$.id,source:e.$.source,target:e.$.target,label:"",properties:{}});return r}),s=Object.assign({},{nodes:a,edges:i});t(s)})})},e}();r.GraphParser=i},function(e,r){e.exports=require("fs-extra")},function(e,r,t){"use strict";var n=t(1),o=t(0),a=function(){function e(e){this.parser=new n.GraphParser,this.path=e}return e.prototype.generateInterfaces=function(){var e=this;return new Promise(function(r,t){e.parser.parse(e.path).then(function(t){var n=t.nodes,o=t.edges,a=n.map(function(r){var t={name:r.label.split("").map(function(e,r){return 0===r?e.toLowerCase():e}).join("").concat(".neo.interface.ts"),label:r.label,methods:e.extractMethods(r,o,n)};return t});r(a)})["catch"](function(e){console.error(o.red(e)),t(e)})})},e.prototype.extractMethods=function(e,r,t){var n=r.filter(function(r){return r.source===e.id}).map(function(e){var r=t.filter(function(r,t){return r.id===e.target})[0],n={name:e.label.split("_").map(function(e,r){return 0===r?e.split("").map(function(e,r){return 0===r?e.toLowerCase():e}).join(""):e}).map(function(e){return e.split("").map(function(e,r){return 0!==r?e.toLowerCase():e}).join("")}).join("").concat(r.label)};return n});return n},e}();r.Extractor=a},function(e,r){e.exports=require("xml2js")}]);
//# sourceMappingURL=extractor.js.map