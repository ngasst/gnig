#!/usr/bin/env node
!function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,t,n){Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=8)}([function(e,t){e.exports=require("chalk")},function(e,t,n){"use strict";var r=n(4),o=n(2),i=n(0),a=function(){function e(){}return e.prototype.getGraph=function(e){var t=new r.Parser;return new Promise(function(n,r){o.readFile(e,function(e,o){e&&(console.info(i.red("An error occured. This probably means you entered a path that doesn't point to a valid .graphml file.\nPlease correct this and try again")),r(!1),process.exit(1)),t.parseString(o.toString(),function(e,t){e&&(console.info(i.red("An error occured. This means we couldn't parse the .graphml file you provided.\nPlease make sure of its integrity and try again.")),r(!1),process.exit()),n(t)})})})},e.prototype.parse=function(e){var t=this;return new Promise(function(n,r){t.getGraph(e).then(function(e){var t=Object.assign({},{nodes:e.graphml.graph[0].node,edges:e.graphml.graph[0].edge}),r=t.nodes,o=t.edges,i=r.map(function(e){return Object.assign({},{label:e.data[0]["y:GenericNode"][0]["y:NodeLabel"][0]._,properties:e.data[0]["y:GenericNode"][0]["y:NodeLabel"][1]._,id:e.$.id})}),a=o.map(function(e){var t;if("y:PolyLineEdge"in e.data[0]&&"y:EdgeLabel"in e.data[0]["y:PolyLineEdge"][0]){var n=e.data[0]["y:PolyLineEdge"][0]["y:EdgeLabel"][0]._.match(new RegExp(/[(A-Z)]+/,"g")).join("_"),r=e.data[0]["y:PolyLineEdge"][0]["y:EdgeLabel"][0]._.replace(n,"");t=Object.assign({},{id:e.$.id,source:e.$.source,target:e.$.target,label:n,properties:r})}else t=Object.assign({},{id:e.$.id,source:e.$.source,target:e.$.target,label:"",properties:{}});return t}),s=Object.assign({},{nodes:i,edges:a});n(s)})})},e}();t.GraphParser=a},function(e,t){e.exports=require("fs-extra")},function(e,t,n){"use strict";var r=n(1),o=n(0),i=function(){function e(e){this.parser=new r.GraphParser,this.path=e}return e.prototype.generateInterfaces=function(){var e=this;return new Promise(function(t,n){e.parser.parse(e.path).then(function(n){var r=n.nodes,o=n.edges,i=r.map(function(t){var n={name:t.label.split("").map(function(e,t){return 0===t?e.toLowerCase():e}).join("").concat(".neo.interface.ts"),label:t.label,methods:e.extractMethods(t,o,r)};return n});t(i)})["catch"](function(e){console.error(o.red(e)),n(e)})})},e.prototype.extractMethods=function(e,t,n){var r=t.filter(function(t){return t.source===e.id}).map(function(e){var t=n.filter(function(t,n){return t.id===e.target})[0],r={name:e.label.split("_").map(function(e,t){return 0===t?e.split("").map(function(e,t){return 0===t?e.toLowerCase():e}).join(""):e}).map(function(e){return e.split("").map(function(e,t){return 0!==t?e.toLowerCase():e}).join("")}).join("").concat(t.label)};return r});return r},e}();t.Extractor=i},function(e,t){e.exports=require("xml2js")},function(e,t){e.exports=require("path")},function(e,t,n){"use strict";var r=n(2),o=n(5),i=n(0),a=function(){function e(){}return e.prototype.write=function(e,t){var n=this;void 0===t&&(t="data/");var r;r=o.resolve(t);var a=e.map(function(e){return n.execute(r,e.name,n.getContent(e))});return new Promise(function(t,n){Promise.all(a).then(function(){console.log(i.magenta("Done writing all "+e.length+" neo interfaces!")),t(!0)})["catch"](function(e){return n(e)})})},e.prototype.execute=function(e,t,n){return new Promise(function(a,s){var c=o.join(e,""+t);r.writeFile(c,n,function(e){e&&(console.info(i.red("An error occured.\nThis probably means you entered a path to a directory that doesn't exist. \nPlease correct this and try again")),s(!1),process.exit(1)),console.log(i.green("written >> "+t)),a(!0)})})},e.prototype.getContent=function(e){var t=e.methods.filter(function(e){return e.name.charAt(0)!==e.name.charAt(0).toUpperCase()}).sort(function(e,t){return e.name.toUpperCase()<t.name.toUpperCase()?-1:e.name.toUpperCase()>t.name.toUpperCase()?1:0}).map(function(e){return e.name+": () => any"}).reduce(function(e,t){return e.concat("\r\n\t"+t+";")},""),n="export interface I"+e.label+"Neo {"+t+"\r\n}\n        ";return n},e}();t.Writer=a},function(e,t){e.exports=require("readline")},function(e,t,n){"use strict";function r(e,t){o=new l.Extractor(e),o.generateInterfaces().then(function(e){h.write(e,t).then(function(){console.log(f.cyan("Process completed successfully!")),process.exit(0)})["catch"](function(e){console.log(f.red(e)),process.exit(1)})})["catch"](function(e){console.log(f.red(e)),process.exit(1)})}var o,i,a,s=n(5),c=n(7),u=n(6),l=n(3),p=n(1),f=n(0),d=process.argv.filter(function(e,t){return t>1}),h=(new p.GraphParser,new u.Writer);if(d.length>0){i=d[0],a=s.resolve("."),void 0!==d[1]?a=s.resolve(d[1]):a;var g=s.resolve(i);r(g,a)}else{var y=c.createInterface({input:process.stdin,output:process.stdout});y.question(f.yellow("Where should we look for a .graphml file?\r\n"),function(e){Promise.resolve(s.resolve(e)).then(function(e){console.info(f.gray("We'll read the .graphml file from: "+e)),y.question(f.yellow("Where should we save the resulting interface files?\r\n"),function(t){Promise.resolve(s.resolve(t)).then(function(t){console.info(f.gray("We'll save the resulting interface files to: "+t+"\r\n")),y.question(f.yellow("Does this look right to you? (yes/no)\r\n"),function(n){"no"===n.trim()&&(console.log("Change the paths as appropriate and try again."),process.exit(0)),"yes"!==n.trim()&&(console.log("Please answer with yes or no. (Type the words in their entirety)"),process.exit(0)),r(e,t)})})["catch"](function(e){console.log(f.red("Sorry, but that path is invalid. Try again.")),process.exit(1)})})})["catch"](function(e){console.log(f.red("Sorry, but that path is invalid. Try again.")),process.exit(1)})})}}]);
//# sourceMappingURL=index.js.map