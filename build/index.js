#!/usr/bin/env node
!function(e){function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var r={};return t.m=e,t.c=r,t.i=function(e){return e},t.d=function(e,t,r){Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var r=e&&e.__esModule?function(){return e["default"]}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=8)}([function(e,t){e.exports=require("chalk")},function(e,t){e.exports=require("fs-extra")},function(e,t,r){"use strict";var n=r(3),o=r(1),a=r(0),i=function(){function e(){}return e.prototype.getGraph=function(e){var t=new n.Parser;return new Promise(function(r,n){o.readFile(e,function(e,o){e&&(console.info(a.red("An error occured. This probably means you entered a path that doesn't point to a valid .graphml file.\nPlease correct this and try again")),n(!1),process.exit(1)),t.parseString(o.toString(),function(e,t){e&&(console.info(a.red("An error occured. This means we couldn't parse the .graphml file you provided.\nPlease make sure of its integrity and try again.")),n(!1),process.exit()),r(t)})})})},e.prototype.parse=function(e){var t=this;return new Promise(function(r,n){t.getGraph(e).then(function(e){var t=Object.assign({},{nodes:e.graphml.graph[0].node,edges:e.graphml.graph[0].edge}),n=t.nodes,o=t.edges,a=n.map(function(e){return Object.assign({},{label:e.data[0]["y:GenericNode"][0]["y:NodeLabel"][0]._,properties:e.data[0]["y:GenericNode"][0]["y:NodeLabel"][1]._,id:e.$.id})}),i=o.map(function(e){var t;if("y:PolyLineEdge"in e.data[0]&&"y:EdgeLabel"in e.data[0]["y:PolyLineEdge"][0]){var r=e.data[0]["y:PolyLineEdge"][0]["y:EdgeLabel"][0]._.match(new RegExp(/[(A-Z)]+/,"g")).join("_"),n=e.data[0]["y:PolyLineEdge"][0]["y:EdgeLabel"][0]._.replace(r,"");t=Object.assign({},{id:e.$.id,source:e.$.source,target:e.$.target,label:r,properties:n})}else t=Object.assign({},{id:e.$.id,source:e.$.source,target:e.$.target,label:"",properties:{}});return t}),s=Object.assign({},{nodes:a,edges:i});r(s)})})},e}();t.GraphParser=i},function(e,t){e.exports=require("xml2js")},function(e,t){e.exports=require("path")},function(e,t,r){"use strict";var n=r(2),o=r(0),a=function(){function e(e){this.parser=new n.GraphParser,this.path=e}return e.prototype.generateInterfaces=function(){var e=this;return new Promise(function(t,r){e.parser.parse(e.path).then(function(r){var n=r.nodes,o=r.edges,a=n.map(function(t){var r={name:t.label.split("").map(function(e,t){return 0===t?e.toLowerCase():e}).join("").concat(".neo.ts"),label:t.label,methods:e.extractMethods(t,o,n)};return r});t(a)})["catch"](function(e){console.error(o.red(e)),r(e)})})},e.prototype.extractMethods=function(e,t,r){var n=t.filter(function(t){return t.source===e.id}).map(function(t){var n=r.filter(function(e,r){return e.id===t.target})[0],o=t.label.split("_").map(function(e,t){return 0===t?e.split("").map(function(e,t){return 0===t?e.toLowerCase():e}).join(""):e}).map(function(e){return e.split("").map(function(e,t){return 0!==t?e.toLowerCase():e}).join("")}).join("").concat(n.label),a=null===t.properties.toString().match(new RegExp(/([a-z_]+:\s?[a-z_]+)/,"g"))?[]:t.properties.toString().match(new RegExp(/([a-z_]+:\s?[a-z_]+)/,"g")),i={name:o,params:a,from:e.label,to:r.filter(function(e){return e.id===t.target})[0].label,relation:t.label};return i});return n},e.prototype.extractRelationships=function(e){var t=e.map(function(e){return e.label});return t},e}();t.Extractor=a},function(e,t,r){"use strict";var n=r(1),o=r(4),a=r(0),i=function(){function e(){}return e.prototype.write=function(e,t){var r=this;void 0===t&&(t="data/");var n;n=o.resolve(t);var i=e.map(function(e){return r.execute(n,e.name,r.getContent(e))});return new Promise(function(t,r){Promise.all(i).then(function(){console.log(a.magenta("Done writing all "+e.length+" neo persistors!")),t(!0)})["catch"](function(e){return r(e)})})},e.prototype.execute=function(e,t,r){return new Promise(function(i,s){var c=o.join(e,""+t);n.writeFile(c,r,function(e){e&&(console.info(a.red("An error occured.\nThis probably means you entered a path to a directory that doesn't exist. \nPlease correct this and try again")),s(!1),process.exit(1)),console.log(a.green("written >> "+t)),i(!0)})})},e.prototype.getContent=function(e){var t=e.methods.filter(function(e){return e.name.charAt(0)!==e.name.charAt(0).toUpperCase()}).sort(function(e,t){return e.name.toUpperCase()<t.name.toUpperCase()?-1:e.name.toUpperCase()>t.name.toUpperCase()?1:0}).map(function(e){var t=e.from.toLowerCase().concat("Fid"),r=e.to.toLowerCase().concat("Tid"),n=e.params.map(function(e){return/([a-z_]+):/g.exec(e)[1]+": "+/([a-z_]+):/g.exec(e)[1]}).reduce(function(e,t){return e.concat(t+",")},"");n="{".concat(n.slice(0,n.length-1)).concat("}");var o=e.name+"("+t.concat(": ObjectID")+", "+r.concat(": ObjectID")+", "+e.params.join(",")+"): Promise<EdgeCreatedResponse> {\r\n\t\treturn this.createEdge({id: "+t+"}, {id: "+r+"}, '"+e.relation+"', "+n+", '"+e.to+"');\r\n\t}\r\n";return o}).reduce(function(e,t){return e.concat("\r\n\t"+t)},""),r="import { ObjectID } from 'mongodb';\r\nimport { NeoPersistor, EdgeCreatedResponse } from '../main/neo.persistor';\r\n\r\nexport class "+e.label+"Neo extends NeoPersistor {\r\n\tlabel: string;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.label = '"+e.label+"';\r\n\t}\r\n"+t+"\r\n}\n        ";return r},e}();t.Writer=i},function(e,t){e.exports=require("readline")},function(e,t,r){"use strict";function n(e,t){o=new l.Extractor(e),o.generateInterfaces().then(function(e){g.write(e,t).then(function(){console.log(f.cyan("Process completed successfully!")),process.exit(0)})["catch"](function(e){console.log(f.red(e)),process.exit(1)})})["catch"](function(e){console.log(f.red(e)),process.exit(1)})}var o,a,i,s=r(4),c=r(7),u=r(6),l=r(5),p=r(2),f=r(0),d=process.argv.filter(function(e,t){return t>1}),g=(new p.GraphParser,new u.Writer);if(d.length>0){a=d[0],i=s.resolve("."),void 0!==d[1]?i=s.resolve(d[1]):i;var h=s.resolve(a);n(h,i)}else{var m=c.createInterface({input:process.stdin,output:process.stdout});m.question(f.yellow("Where should we look for a .graphml file?\r\n"),function(e){Promise.resolve(s.resolve(e)).then(function(e){console.info(f.gray("We'll read the .graphml file from: "+e)),m.question(f.yellow("Where should we save the resulting interface files?\r\n"),function(t){Promise.resolve(s.resolve(t)).then(function(t){console.info(f.gray("We'll save the resulting interface files to: "+t+"\r\n")),m.question(f.yellow("Does this look right to you? (yes/no)\r\n"),function(r){"no"===r.trim()&&(console.log("Change the paths as appropriate and try again."),process.exit(0)),"yes"!==r.trim()&&(console.log("Please answer with yes or no. (Type the words in their entirety)"),process.exit(0)),n(e,t)})})["catch"](function(e){console.log(f.red("Sorry, but that path is invalid. Try again.")),process.exit(1)})})})["catch"](function(e){console.log(f.red("Sorry, but that path is invalid. Try again.")),process.exit(1)})})}}]);
//# sourceMappingURL=index.js.map